// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: services/stockkeepingunit/proto/addstockcounthistorybycountry.proto

package addstockcounthistorybycountrypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocationId    int64                  `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LocationName  string                 `protobuf:"bytes,2,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Location) GetLocationName() string {
	if x != nil {
		return x.LocationName
	}
	return ""
}

type SkuCounts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gks           int64                  `protobuf:"varint,1,opt,name=gks,proto3" json:"gks,omitempty"`
	Neo           int64                  `protobuf:"varint,2,opt,name=neo,proto3" json:"neo,omitempty"`
	Pro           int64                  `protobuf:"varint,3,opt,name=pro,proto3" json:"pro,omitempty"`
	MmB           int64                  `protobuf:"varint,4,opt,name=mm_b,json=mmB,proto3" json:"mm_b,omitempty"`
	MmP           int64                  `protobuf:"varint,5,opt,name=mm_p,json=mmP,proto3" json:"mm_p,omitempty"`
	Swap          int64                  `protobuf:"varint,6,opt,name=swap,proto3" json:"swap,omitempty"`
	M3Mr          int64                  `protobuf:"varint,7,opt,name=m3_mr,json=m3Mr,proto3" json:"m3_mr,omitempty"`
	M3Pb          int64                  `protobuf:"varint,8,opt,name=m3_pb,json=m3Pb,proto3" json:"m3_pb,omitempty"`
	M3Fifa        int64                  `protobuf:"varint,9,opt,name=m3_fifa,json=m3Fifa,proto3" json:"m3_fifa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkuCounts) Reset() {
	*x = SkuCounts{}
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkuCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuCounts) ProtoMessage() {}

func (x *SkuCounts) ProtoReflect() protoreflect.Message {
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuCounts.ProtoReflect.Descriptor instead.
func (*SkuCounts) Descriptor() ([]byte, []int) {
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP(), []int{1}
}

func (x *SkuCounts) GetGks() int64 {
	if x != nil {
		return x.Gks
	}
	return 0
}

func (x *SkuCounts) GetNeo() int64 {
	if x != nil {
		return x.Neo
	}
	return 0
}

func (x *SkuCounts) GetPro() int64 {
	if x != nil {
		return x.Pro
	}
	return 0
}

func (x *SkuCounts) GetMmB() int64 {
	if x != nil {
		return x.MmB
	}
	return 0
}

func (x *SkuCounts) GetMmP() int64 {
	if x != nil {
		return x.MmP
	}
	return 0
}

func (x *SkuCounts) GetSwap() int64 {
	if x != nil {
		return x.Swap
	}
	return 0
}

func (x *SkuCounts) GetM3Mr() int64 {
	if x != nil {
		return x.M3Mr
	}
	return 0
}

func (x *SkuCounts) GetM3Pb() int64 {
	if x != nil {
		return x.M3Pb
	}
	return 0
}

func (x *SkuCounts) GetM3Fifa() int64 {
	if x != nil {
		return x.M3Fifa
	}
	return 0
}

type Warehouse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sku           map[string]*SkuCounts  `protobuf:"bytes,3,rep,name=sku,proto3" json:"sku,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Locations     []*Location            `protobuf:"bytes,4,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Warehouse) Reset() {
	*x = Warehouse{}
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Warehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warehouse) ProtoMessage() {}

func (x *Warehouse) ProtoReflect() protoreflect.Message {
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warehouse.ProtoReflect.Descriptor instead.
func (*Warehouse) Descriptor() ([]byte, []int) {
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP(), []int{2}
}

func (x *Warehouse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Warehouse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Warehouse) GetSku() map[string]*SkuCounts {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *Warehouse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type StockCountAddRequestByCountry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryId     int64                  `protobuf:"varint,1,opt,name=countryId,proto3" json:"countryId,omitempty"`
	CountryName   string                 `protobuf:"bytes,2,opt,name=countryName,proto3" json:"countryName,omitempty"`
	Warehouses    []*Warehouse           `protobuf:"bytes,3,rep,name=warehouses,proto3" json:"warehouses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockCountAddRequestByCountry) Reset() {
	*x = StockCountAddRequestByCountry{}
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockCountAddRequestByCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockCountAddRequestByCountry) ProtoMessage() {}

func (x *StockCountAddRequestByCountry) ProtoReflect() protoreflect.Message {
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockCountAddRequestByCountry.ProtoReflect.Descriptor instead.
func (*StockCountAddRequestByCountry) Descriptor() ([]byte, []int) {
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP(), []int{3}
}

func (x *StockCountAddRequestByCountry) GetCountryId() int64 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *StockCountAddRequestByCountry) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *StockCountAddRequestByCountry) GetWarehouses() []*Warehouse {
	if x != nil {
		return x.Warehouses
	}
	return nil
}

type StockCountAddResponseByCountry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     string                 `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockCountAddResponseByCountry) Reset() {
	*x = StockCountAddResponseByCountry{}
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockCountAddResponseByCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockCountAddResponseByCountry) ProtoMessage() {}

func (x *StockCountAddResponseByCountry) ProtoReflect() protoreflect.Message {
	mi := &file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockCountAddResponseByCountry.ProtoReflect.Descriptor instead.
func (*StockCountAddResponseByCountry) Descriptor() ([]byte, []int) {
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP(), []int{4}
}

func (x *StockCountAddResponseByCountry) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto protoreflect.FileDescriptor

const file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDesc = "" +
	"\n" +
	"Cservices/stockkeepingunit/proto/addstockcounthistorybycountry.proto\x12\x13stockkeepingunit.v1\"P\n" +
	"\bLocation\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\x03R\n" +
	"locationId\x12#\n" +
	"\rlocation_name\x18\x02 \x01(\tR\flocationName\"\xbe\x01\n" +
	"\tSkuCounts\x12\x10\n" +
	"\x03gks\x18\x01 \x01(\x03R\x03gks\x12\x10\n" +
	"\x03neo\x18\x02 \x01(\x03R\x03neo\x12\x10\n" +
	"\x03pro\x18\x03 \x01(\x03R\x03pro\x12\x11\n" +
	"\x04mm_b\x18\x04 \x01(\x03R\x03mmB\x12\x11\n" +
	"\x04mm_p\x18\x05 \x01(\x03R\x03mmP\x12\x12\n" +
	"\x04swap\x18\x06 \x01(\x03R\x04swap\x12\x13\n" +
	"\x05m3_mr\x18\a \x01(\x03R\x04m3Mr\x12\x13\n" +
	"\x05m3_pb\x18\b \x01(\x03R\x04m3Pb\x12\x17\n" +
	"\am3_fifa\x18\t \x01(\x03R\x06m3Fifa\"\xff\x01\n" +
	"\tWarehouse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\x03sku\x18\x03 \x03(\v2'.stockkeepingunit.v1.Warehouse.SkuEntryR\x03sku\x12;\n" +
	"\tlocations\x18\x04 \x03(\v2\x1d.stockkeepingunit.v1.LocationR\tlocations\x1aV\n" +
	"\bSkuEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.stockkeepingunit.v1.SkuCountsR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x1dStockCountAddRequestByCountry\x12\x1c\n" +
	"\tcountryId\x18\x01 \x01(\x03R\tcountryId\x12 \n" +
	"\vcountryName\x18\x02 \x01(\tR\vcountryName\x12>\n" +
	"\n" +
	"warehouses\x18\x03 \x03(\v2\x1e.stockkeepingunit.v1.WarehouseR\n" +
	"warehouses\">\n" +
	"\x1eStockCountAddResponseByCountry\x12\x1c\n" +
	"\tcreatedAt\x18\x01 \x01(\tR\tcreatedAt2\x9e\x01\n" +
	"\x10StockKeepingUnit\x12\x89\x01\n" +
	"\x1eAddStockCountHistoryforCountry\x122.stockkeepingunit.v1.StockCountAddRequestByCountry\x1a3.stockkeepingunit.v1.StockCountAddResponseByCountryBXZVstockkeepingunit/proto/addstockcounthistorybycountrypb;addstockcounthistorybycountrypbb\x06proto3"

var (
	file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescOnce sync.Once
	file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescData []byte
)

func file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescGZIP() []byte {
	file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescOnce.Do(func() {
		file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDesc), len(file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDesc)))
	})
	return file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDescData
}

var file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_goTypes = []any{
	(*Location)(nil),                       // 0: stockkeepingunit.v1.Location
	(*SkuCounts)(nil),                      // 1: stockkeepingunit.v1.SkuCounts
	(*Warehouse)(nil),                      // 2: stockkeepingunit.v1.Warehouse
	(*StockCountAddRequestByCountry)(nil),  // 3: stockkeepingunit.v1.StockCountAddRequestByCountry
	(*StockCountAddResponseByCountry)(nil), // 4: stockkeepingunit.v1.StockCountAddResponseByCountry
	nil,                                    // 5: stockkeepingunit.v1.Warehouse.SkuEntry
}
var file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_depIdxs = []int32{
	5, // 0: stockkeepingunit.v1.Warehouse.sku:type_name -> stockkeepingunit.v1.Warehouse.SkuEntry
	0, // 1: stockkeepingunit.v1.Warehouse.locations:type_name -> stockkeepingunit.v1.Location
	2, // 2: stockkeepingunit.v1.StockCountAddRequestByCountry.warehouses:type_name -> stockkeepingunit.v1.Warehouse
	1, // 3: stockkeepingunit.v1.Warehouse.SkuEntry.value:type_name -> stockkeepingunit.v1.SkuCounts
	3, // 4: stockkeepingunit.v1.StockKeepingUnit.AddStockCountHistoryforCountry:input_type -> stockkeepingunit.v1.StockCountAddRequestByCountry
	4, // 5: stockkeepingunit.v1.StockKeepingUnit.AddStockCountHistoryforCountry:output_type -> stockkeepingunit.v1.StockCountAddResponseByCountry
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_init() }
func file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_init() {
	if File_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDesc), len(file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_goTypes,
		DependencyIndexes: file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_depIdxs,
		MessageInfos:      file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_msgTypes,
	}.Build()
	File_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto = out.File
	file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_goTypes = nil
	file_services_stockkeepingunit_proto_addstockcounthistorybycountry_proto_depIdxs = nil
}
